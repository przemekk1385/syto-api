openapi: 3.0.2
info:
  title: Syto API
  version: v1
paths:
  /api/v1/user/:
    get:
      operationId: listUsers
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
          description: ''
      tags:
        - api
    post:
      operationId: createUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
        - api
  /api/v1/user/me/:
    get:
      operationId: meUser
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
        - api
  '/api/v1/user/{id}/':
    get:
      operationId: retrieveUser
      description: ''
      parameters:
        - name: id
          in: path
          required: true
          description: A unique integer value identifying this user.
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
        - api
    put:
      operationId: updateUser
      description: ''
      parameters:
        - name: id
          in: path
          required: true
          description: A unique integer value identifying this user.
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
        - api
    patch:
      operationId: partialUpdateUser
      description: ''
      parameters:
        - name: id
          in: path
          required: true
          description: A unique integer value identifying this user.
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
        - api
    delete:
      operationId: destroyUser
      description: ''
      parameters:
        - name: id
          in: path
          required: true
          description: A unique integer value identifying this user.
          schema:
            type: string
      responses:
        '204':
          description: ''
      tags:
        - api
  '/api/v1/user/{id}/toggle_is_active/':
    get:
      operationId: toggleIsActiveUser
      description: ''
      parameters:
        - name: id
          in: path
          required: true
          description: A unique integer value identifying this user.
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IsActiveStatus'
          description: ''
      tags:
        - api
  /api/v1/slot/:
    get:
      operationId: listSlots
      description: >-
        List slots available for current user, for members of stationary_worker
        or cottage_worker groups.
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Slot'
          description: ''
      tags:
        - api
    post:
      operationId: createSlot
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SlotCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SlotCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SlotCreate'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SlotCreate'
          description: ''
      tags:
        - api
  /api/v1/slot/all/:
    get:
      operationId: allSlot
      description: 'List all slots, for members of foreman group.'
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Slot'
          description: ''
      tags:
        - api
  '/api/v1/slot/{day}/':
    get:
      operationId: retrieveSlot
      description: ''
      parameters:
        - name: day
          in: path
          required: true
          description: A unique value identifying this slot.
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Slot'
          description: ''
      tags:
        - api
    put:
      operationId: updateSlot
      description: ''
      parameters:
        - name: day
          in: path
          required: true
          description: A unique value identifying this slot.
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Slot'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Slot'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Slot'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Slot'
          description: ''
      tags:
        - api
    patch:
      operationId: partialUpdateSlot
      description: ''
      parameters:
        - name: day
          in: path
          required: true
          description: A unique value identifying this slot.
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Slot'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Slot'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Slot'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Slot'
          description: ''
      tags:
        - api
    delete:
      operationId: destroySlot
      description: ''
      parameters:
        - name: day
          in: path
          required: true
          description: A unique value identifying this slot.
          schema:
            type: string
      responses:
        '204':
          description: ''
      tags:
        - api
  /api/v1/availability/hours/:
    get:
      operationId: listAvailabilityHours
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AvailabilityHours'
          description: ''
      tags:
        - api
    post:
      operationId: createAvailabilityHours
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AvailabilityHours'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AvailabilityHours'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AvailabilityHours'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AvailabilityHours'
          description: ''
      tags:
        - api
  '/api/v1/availability/hours/{id}/':
    get:
      operationId: retrieveAvailabilityHours
      description: ''
      parameters:
        - name: id
          in: path
          required: true
          description: A unique integer value identifying this availability hours.
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AvailabilityHours'
          description: ''
      tags:
        - api
    put:
      operationId: updateAvailabilityHours
      description: ''
      parameters:
        - name: id
          in: path
          required: true
          description: A unique integer value identifying this availability hours.
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AvailabilityHours'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AvailabilityHours'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AvailabilityHours'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AvailabilityHours'
          description: ''
      tags:
        - api
    patch:
      operationId: partialUpdateAvailabilityHours
      description: ''
      parameters:
        - name: id
          in: path
          required: true
          description: A unique integer value identifying this availability hours.
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AvailabilityHours'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AvailabilityHours'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AvailabilityHours'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AvailabilityHours'
          description: ''
      tags:
        - api
    delete:
      operationId: destroyAvailabilityHours
      description: ''
      parameters:
        - name: id
          in: path
          required: true
          description: A unique integer value identifying this availability hours.
          schema:
            type: string
      responses:
        '204':
          description: ''
      tags:
        - api
  /api/v1/availability/period/:
    get:
      operationId: listAvailabilityPeriods
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AvailabilityPeriod'
          description: ''
      tags:
        - api
    post:
      operationId: createAvailabilityPeriod
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AvailabilityPeriod'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AvailabilityPeriod'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AvailabilityPeriod'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AvailabilityPeriod'
          description: ''
      tags:
        - api
  /api/v1/availability/period/all/:
    get:
      operationId: allAvailabilityPeriod
      description: 'List all availability periods, for members of foreman group.'
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AvailabilityPeriod'
          description: ''
      tags:
        - api
  '/api/v1/availability/period/{id}/':
    get:
      operationId: retrieveAvailabilityPeriod
      description: ''
      parameters:
        - name: id
          in: path
          required: true
          description: A unique integer value identifying this availability period.
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AvailabilityPeriod'
          description: ''
      tags:
        - api
    put:
      operationId: updateAvailabilityPeriod
      description: ''
      parameters:
        - name: id
          in: path
          required: true
          description: A unique integer value identifying this availability period.
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AvailabilityPeriod'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AvailabilityPeriod'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AvailabilityPeriod'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AvailabilityPeriod'
          description: ''
      tags:
        - api
    patch:
      operationId: partialUpdateAvailabilityPeriod
      description: ''
      parameters:
        - name: id
          in: path
          required: true
          description: A unique integer value identifying this availability period.
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AvailabilityPeriod'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AvailabilityPeriod'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AvailabilityPeriod'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AvailabilityPeriod'
          description: ''
      tags:
        - api
    delete:
      operationId: destroyAvailabilityPeriod
      description: ''
      parameters:
        - name: id
          in: path
          required: true
          description: A unique integer value identifying this availability period.
          schema:
            type: string
      responses:
        '204':
          description: ''
      tags:
        - api
  /api/v1/availability/:
    get:
      operationId: listAvailabilityOverview
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AvailabilityOverview'
          description: ''
      tags:
        - api
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        email:
          type: string
          format: email
          maxLength: 254
        password:
          type: string
          writeOnly: true
        first_name:
          type: string
        last_name:
          type: string
        is_active:
          type: boolean
          readOnly: true
        groups:
          type: array
          items:
            type: string
          readOnly: true
        date_of_birth:
          type: string
          format: date
          nullable: true
        phone_number:
          type: string
          nullable: true
        address:
          type: string
          nullable: true
        is_new:
          type: boolean
          writeOnly: true
        is_cottage:
          type: boolean
          writeOnly: true
      required:
        - email
        - password
        - first_name
        - last_name
    SlotCreate:
      type: object
      properties:
        day:
          type: string
          format: date
        stationary_workers_limit:
          type: integer
          nullable: true
        is_open_for_cottage_workers:
          type: boolean
          nullable: true
      required:
        - day
    Slot:
      type: object
      properties:
        day:
          type: string
          format: date
          readOnly: true
        stationary_workers_limit:
          type: integer
          nullable: true
        is_open_for_cottage_workers:
          type: boolean
          nullable: true
    AvailabilityHours:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        hours:
          type: integer
        slot:
          type: string
      required:
        - hours
        - slot
    AvailabilityPeriod:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        worker:
          $ref: '#/components/schemas/Worker'
        start:
          type: string
        end:
          type: string
        slot:
          type: string
      required:
        - start
        - end
        - slot
    IsActiveStatus:
      type: object
      properties:
        is_active:
          type: boolean
          readOnly: true
    AvailabilityOverview:
      type: object
      properties:
        day:
          type: string
          format: date
          readOnly: true
        cottage_hours:
          type: integer
          readOnly: true
        cottage_workers:
          type: integer
          readOnly: true
        stationary_hours:
          type: integer
          readOnly: true
        stationary_workers:
          type: integer
          readOnly: true
        workers:
          type: array
          items:
            $ref: '#/components/schemas/Worker'
    Worker:
      type: object
      properties:
        first_name:
          type: string
          readOnly: true
        last_name:
          type: string
          readOnly: true
        groups:
          type: array
          items:
            type: string
            readOnly: true
